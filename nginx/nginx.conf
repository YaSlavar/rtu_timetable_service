events {

  worker_connections  4096;  ## Default: 1024

}
http {
    include mime.types;
    upstream django {
        # Список бэкэнд серверов для проксирования
        server web:8000;
    }

    server {
        listen 80;
        # Параметры проксирования
        location / {
            # Если будет открыта корневая страница
            # все запросу пойдут к одному из серверов
            # в upstream django_proj
            proxy_pass http://django;
            # Устанавливаем заголовки
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            # Отключаем перенаправление
            proxy_redirect off;
        }

        location /static/ {
            root /data/;
        }

        location /media/ {
            root /data/;
        }
    }

    server {
        listen 443 ssl;
        server_name time-rtu.ru;
        client_max_body_size 0;

        ssl_certificate /certs/time-rtu.crt;
        ssl_certificate_key /certs/time-rtu.key;

        gzip on;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        gzip_comp_level 5;

        # Параметры проксирования
        location / {
            # Если будет открыта корневая страница
            # все запросу пойдут к одному из серверов
            # в upstream django_proj
            proxy_pass http://django;
            # Устанавливаем заголовки
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            # Отключаем перенаправление
            proxy_redirect off;
        }

        location /static/ {
            root /data/;
        }

        location /media/ {
            root /data/;
        }
    }
}

# user  nginx;
# worker_processes  1;
#
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
#
# events {
#   worker_connections  1024;  ## Default: 1024, increase if you have lots of clients
# }
#
# http {
#   include       /etc/nginx/mime.types;
#   # fallback in case we can't determine a type
#   default_type  application/octet-stream;
#
#   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#   '$status $body_bytes_sent "$http_referer" '
#   '"$http_user_agent" "$http_x_forwarded_for"';
#
#   access_log  /var/log/nginx/access.log  main;
#
#   client_max_body_size 0;
#   sendfile        on;
#   #tcp_nopush     on;
#
#   keepalive_timeout  65;
#
#   upstream app {
#     server web:8000;
#   }
#
#   server {
#     listen 80;
#     server_name time-rtu.ru;
#     client_max_body_size 0;
#     rewrite ^ https://time-rtu.ru$request_uri? permanent;
#     charset utf-8;
#
#     # Handle noisy favicon.ico messages in nginx
#      location = /favicon.ico {
#         return 204;
#         access_log     off;
#         log_not_found  off;
#      }
#
#      location / {
#         # checks for static file, if not found proxy to app
#         try_files $uri @proxy_to_app;
#      }
#
#      location /static/ {
#         root /data/;
#      }
#
#      location /media/ {
#          root /data/;
#       }
#
#     # django app
#      location @proxy_to_app {
#         proxy_redirect     off;
#         proxy_set_header   Host $host;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-Host $server_name;
#         proxy_pass http://web:8000;
#     }
#   }
#
#    server {
#    listen 443 ssl;
#    server_name time-rtu.ru;
#    client_max_body_size 0;
#    ssl_certificate /certs/time-rtu.crt;
#    ssl_certificate_key /certs/5991194.key;
#
#    gzip on;
#    gzip_disable "msie6";
#    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
#    gzip_comp_level 5;
#
#    # django app
#    location @proxy_to_app {
#         proxy_redirect     off;
#         proxy_set_header   Host $host;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-Host $server_name;
#         proxy_pass http://web:8000;
#     }
#
# # Handle noisy favicon.ico messages in nginx
#      location = /favicon.ico {
#         return 204;
#         access_log     off;
#         log_not_found  off;
#      }
#
#      location / {
#         # checks for static file, if not found proxy to app
#         try_files $uri @proxy_to_app;
#      }
#
#      location /static/ {
#         root /data/;
#      }
#
#      location /media/ {
#          root /data/;
#       }
#   }
